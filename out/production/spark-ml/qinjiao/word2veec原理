mllib.feature包中包含一些用来进行常见特征转化的类。这些类中有从文本（或其他表示）创建特征向量的算法，
也有对特征向量进行正规化和伸缩变换的方法。　　　　　　　　　　　　　　　　　　　　　　　　　　　　
TF-IDF词频—逆文档频率（简称TF-IDF）是一种用来从文本文档（例如网页）中生成特征向量的简单方法。
它为文档中的每个词计算两个统计值：一个是词频（TF），也就是每个词在文档中出现的次数，另一个是逆文档频率（IDF），
用来衡量一个词在整个文档语料库中出现的（逆）频繁程度。这些值的积，也就是TF×IDF，展示了一个词与特定文档的相关程度
（比如这个词在某文档中很常见，但在整个语料库中却很少见）。
MLlib有两个算法可以用来计算TF-IDF： HashingTF和IDF ，都在mllib.feature包内。HashingTF从一个文档中计算出给定大小的词频向量。
为了将词与向量顺序对应起来，它使用了哈希法（hasing trick）。在类似英语这样的语言中，有几十万个单词，因此将每个单词映射到向量中的一个独立的维度上需要付出很大代价。而HashingTF使用每个单词对所需向量的长度S取模得出的哈希值，把所有单词映射到一个0到S-1之间的数字上。由此我们可以保证生成一个S维的向量。在实践中，即使有多个单词被映射到同一个哈希值上，算法依然适用。MLlib开发者推荐将S设置在2 18到2 20之间。
Word2Vec计算单词的向量表示。这种表示的主要优点是相似的词在向量空间中离得近，这使得向新模式的泛化更容易并且模型估计更健壮。
分布式的向量表示在诸如命名实体识别、歧义消除、句子解析、打标签以及机器翻译等自然语言处理程序中比较有用